/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;
import java.sql.PreparedStatement;
import Koneksi.KoneksiDB;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author oc
 */
public class sewakamar extends javax.swing.JFrame {
     public Connection con;
    public Statement stat;
    public ResultSet rs;
    public String sql, tgl="", tb="";
    /**
     * Creates new form datapenyewa
     */
    public sewakamar() {
       initComponents();
//        this.setExtendedState(Dashboard.MAXIMIZED_BOTH);
        setLocationRelativeTo(null);
        KoneksiDB db = new KoneksiDB();
        db.koneksikoskosan();
        con=db.con;
        stat=db.stat;
        rs=db.rs;
        
        TSEWA.setEnabled(false);
        TNAMA.setEnabled(false);
        TFASILITAS.setEnabled(false);
        THARGA.setEnabled(false);
        jDateChooser1.setEnabled(false);
        // Mengatur jDateChooser2 ke tanggal hari ini
        jDateChooser1.setDate(Calendar.getInstance().getTime());
//        tampildatapenyewa();
        loadData ();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        foto = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        level = new javax.swing.JLabel();
        pengguna = new javax.swing.JLabel();
        role = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TABELTAMPIL = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TIDKAMAR = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TFASILITAS = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        THARGA = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        TSEWA = new javax.swing.JTextField();
        TIDPENYEWA = new javax.swing.JTextField();
        TNAMA = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DATA MASTER");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 60, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DATA USER");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 70, 20));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("DATA PENYEWA");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 100, 20));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("TRANSAKSI");
        jPanel2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 50, -1));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("BAYAR BULANAN");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 100, 20));

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("SEWA KAMAR");
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 80, 20));

        jLabel36.setBackground(new java.awt.Color(255, 255, 255));
        jLabel36.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("RGT ");
        jPanel2.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/home2.png"))); // NOI18N
        jLabel38.setText("DASHBOARD");
        jLabel38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel38MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 130, 40));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/home.png"))); // NOI18N
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 80, 60));

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/transaksi.png"))); // NOI18N
        jPanel2.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 80, 40));

        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("DATA KAMAR");
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel44MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 80, 20));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("LAPORAN");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("BUKTI BAYAR");
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, 20));

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("PEMBUKUAN");
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, 20));

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/laporan.png"))); // NOI18N
        jPanel2.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 70, 40));

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/keluar.png"))); // NOI18N
        jLabel21.setText("KELUAR");
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 110, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 710));

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(foto, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 50, 50));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("RESIDENCE GARDEN TOWER");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, -1, -1));

        username.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        username.setForeground(new java.awt.Color(255, 255, 255));
        username.setText("username");
        username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameMouseClicked(evt);
            }
        });
        jPanel1.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 70, -1));

        level.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        level.setForeground(new java.awt.Color(255, 255, 255));
        level.setText("level");
        level.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                levelMouseClicked(evt);
            }
        });
        jPanel1.add(level, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, 110, -1));

        pengguna.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        pengguna.setForeground(new java.awt.Color(255, 255, 255));
        pengguna.setText("USERNAME :");
        pengguna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                penggunaMouseClicked(evt);
            }
        });
        jPanel1.add(pengguna, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        role.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        role.setForeground(new java.awt.Color(255, 255, 255));
        role.setText("LEVEL :");
        role.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roleMouseClicked(evt);
            }
        });
        jPanel1.add(role, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 810, 70));

        TABELTAMPIL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TABELTAMPIL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABELTAMPILMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TABELTAMPIL);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, 780, 290));

        jLabel6.setText("ID Sewa");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 200, 20));

        jLabel7.setText("ID Penyewa");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 200, 20));

        TIDKAMAR.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                TIDKAMARCaretUpdate(evt);
            }
        });
        TIDKAMAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TIDKAMARActionPerformed(evt);
            }
        });
        getContentPane().add(TIDKAMAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 120, 250, 30));

        jLabel10.setText("ID Kamar");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 120, 190, 20));

        jLabel9.setText("Nama Penyewa");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 200, 20));

        TFASILITAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFASILITASActionPerformed(evt);
            }
        });
        getContentPane().add(TFASILITAS, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 170, 250, 30));

        jLabel11.setText("Fasilitas");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 170, 190, 20));

        THARGA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                THARGAActionPerformed(evt);
            }
        });
        getContentPane().add(THARGA, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 220, 250, 30));

        jLabel12.setText("Harga");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, 190, 20));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TSEWA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TSEWAActionPerformed(evt);
            }
        });
        jPanel3.add(TSEWA, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 6, 240, 30));

        TIDPENYEWA.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                TIDPENYEWACaretUpdate(evt);
            }
        });
        TIDPENYEWA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TIDPENYEWAActionPerformed(evt);
            }
        });
        jPanel3.add(TIDPENYEWA, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 56, 240, 30));

        TNAMA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TNAMAActionPerformed(evt);
            }
        });
        jPanel3.add(TNAMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 106, 240, 30));

        jLabel8.setText("Tanggal Sewa");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 100, 20));
        jPanel3.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 240, -1));

        jButton2.setBackground(new java.awt.Color(0, 51, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("BAYAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 150, 90, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 780, 190));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 780, 310));

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel24.setText("DATA SEWA");
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TSEWAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TSEWAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TSEWAActionPerformed

    private void TIDPENYEWAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TIDPENYEWAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TIDPENYEWAActionPerformed

    private void TNAMAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TNAMAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNAMAActionPerformed

    private void TIDKAMARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TIDKAMARActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TIDKAMARActionPerformed

    private void TFASILITASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFASILITASActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFASILITASActionPerformed

    private void THARGAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_THARGAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_THARGAActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    try {
        // Ambil data dari input pengguna
        String idSewa = TSEWA.getText().trim(); // TextField untuk ID Sewa
        String idPenyewa = TIDPENYEWA.getText().trim(); // TextField untuk ID Penyewa
        String namaPenyewa = TNAMA.getText().trim();
        java.util.Date utilDate = jDateChooser1.getDate(); // Ambil tanggal dari JDateChooser
        String idKamar = TIDKAMAR.getText().trim(); // TextField untuk ID Kamar

        // Validasi input
        if (idSewa.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "ID Sewa tidak boleh kosong!");
            return;
        }
        if (idPenyewa.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "ID Penyewa tidak boleh kosong!");
            return;
        }
        if (utilDate == null) {
            JOptionPane.showMessageDialog(rootPane, "Tanggal harus diisi!");
            return;
        }
        if (idKamar.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "ID Kamar tidak boleh kosong!");
            return;
        }

        // Konversi java.util.Date ke java.sql.Date
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());


        // Query SQL
        String sqlInsertSewa = "INSERT INTO tbsewa (id_sewa, id_penyewa, tanggal, nomor_kamar) VALUES (?, ?, ?, ?)";
        String sqlUpdateKamar = "UPDATE tbkamar SET status = ? WHERE nomor_kamar = ?";
        String sqlHargaKamar = "SELECT harga_sewa FROM tbkamar WHERE nomor_kamar = ?";
        String sqlInsertBulanan = "INSERT INTO tbbulanan (idsewa, nama_penyewa, tanggalsewa, nokamar, bulan, harga) VALUES (?, ?, ?, ?, ?, ?)";
        String sqlNamaPenyewa = "SELECT nama_penyewa FROM tbpenyewa WHERE id = ?";

        try (
            PreparedStatement psInsertSewa = con.prepareStatement(sqlInsertSewa);
            PreparedStatement psUpdate = con.prepareStatement(sqlUpdateKamar);
            PreparedStatement psHarga = con.prepareStatement(sqlHargaKamar);
            PreparedStatement psInsertBulanan = con.prepareStatement(sqlInsertBulanan);
            PreparedStatement psNama = con.prepareStatement(sqlNamaPenyewa)
        ) {
            // Ambil harga sewa kamar
            psHarga.setString(1, idKamar);
            ResultSet rsHarga = psHarga.executeQuery();
            double hargaSewa = 0;
            if (rsHarga.next()) {
                hargaSewa = rsHarga.getDouble("harga_sewa");
            }
            rsHarga.close(); // Tutup ResultSet

            // Isi parameter pada query INSERT ke tbsewa
            psInsertSewa.setString(1, idSewa);
            psInsertSewa.setString(2, idPenyewa);
            psInsertSewa.setDate(3, sqlDate);
            psInsertSewa.setString(4, idKamar);
            psInsertSewa.executeUpdate();

             // Ambil nama penyewa dari tabel tbpenyewa
            psNama.setString(1, idPenyewa);
            ResultSet rsNama = psNama.executeQuery();
            
            if (rsNama.next()) {
                namaPenyewa = rsNama.getString("nama_penyewa");
            }
            rsNama.close(); // Tutup ResultSet
            
            // Isi parameter pada query UPDATE untuk memperbarui status kamar
            psUpdate.setString(1, "Milik " + namaPenyewa);
            psUpdate.setString(2, idKamar);
            psUpdate.executeUpdate();

            // Ambil bulan dari tanggal sewa
            SimpleDateFormat bulanFormat = new SimpleDateFormat("MMMM", new Locale("id"));
            String bulan = bulanFormat.format(utilDate);

            // Isi parameter pada query INSERT ke tbbulanan
            psInsertBulanan.setString(1, idSewa);
            psInsertBulanan.setString(2, namaPenyewa);
            psInsertBulanan.setDate(3, sqlDate);
            psInsertBulanan.setString(4, idKamar);
            psInsertBulanan.setString(5, bulan);
            psInsertBulanan.setDouble(6, hargaSewa);
            psInsertBulanan.executeUpdate();

            // Ambil file gambar barcode (misalnya file barcode.jpg)
            File barcodeFile = new File("C:\\Users\\oc\\OneDrive\\Documents\\NetBeansProjects\\kos-kosan\\src\\icon\\qrpay.jpg");
            Image barcodeImage = ImageIO.read(barcodeFile);

            // Perkecil ukuran barcode
            Image scaledBarcode = barcodeImage.getScaledInstance(200, 200, Image.SCALE_SMOOTH);

            // Menampilkan barcode dalam JOptionPane
            JOptionPane.showMessageDialog(rootPane,
                new JLabel(new ImageIcon(scaledBarcode)), 
                "Total Bayar: Rp " + hargaSewa, 
                JOptionPane.INFORMATION_MESSAGE);

            // Tampilkan pesan sukses dengan total bayar
            JOptionPane.showMessageDialog(rootPane, 
                "Pembayaran Berhasil.\nTotal Bayar: Rp " + hargaSewa, 
                "Sukses", 
                JOptionPane.INFORMATION_MESSAGE);

            // Refresh data tabel
            loadData();

            // Bersihkan input setelah menyimpan data
            bersih();
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(rootPane, "Gagal menampilkan barcode: " + e.getMessage());
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(rootPane, "Kesalahan SQL: " + e.getMessage());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, "Terjadi kesalahan: " + e.getMessage());
    }
           // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TABELTAMPILMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABELTAMPILMouseClicked

if (tb.equals("1")) {
    int tabel = TABELTAMPIL.getSelectedRow();
    if (tabel != -1) { // Pastikan ada baris yang dipilih
        String idpenyewa = TABELTAMPIL.getValueAt(tabel, 0).toString();
        String nama = TABELTAMPIL.getValueAt(tabel, 1).toString();
        TIDPENYEWA.setText(idpenyewa);
        TNAMA.setText(nama);

        try {
            sql = "SELECT * FROM tbpenyewa WHERE idpenyewa = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, idpenyewa);
            rs = pst.executeQuery();

            if (rs.next()) { // Validasi apakah data ditemukan
                TIDPENYEWA.setText(rs.getString("idpenyewa"));
                TNAMA.setText(rs.getString("nama"));
            }
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(rootPane, "Error: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(rootPane, "Tidak ada baris yang dipilih.");
    }
} else if (tb.equals("2")) {
    int tabel = TABELTAMPIL.getSelectedRow();
    if (tabel != -1) { // Pastikan ada baris yang dipilih
        String idkamar = TABELTAMPIL.getValueAt(tabel, 0).toString();
        String fasilitas = TABELTAMPIL.getValueAt(tabel, 2).toString();
        String harga = TABELTAMPIL.getValueAt(tabel, 3).toString();
        TIDKAMAR.setText(idkamar);
        TFASILITAS.setText(fasilitas);
        THARGA.setText(harga);

        try {
            sql = "\"SELECT * FROM tbkamar WHERE nomor_kamar NOT IN (SELECT nomor_kamar FROM tbsewa)";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, idkamar);
            rs = pst.executeQuery();

            if (rs.next()) { // Validasi apakah data ditemukan
                TIDKAMAR.setText(rs.getString("idkamar"));
                TFASILITAS.setText(rs.getString("fasilitas"));
                THARGA.setText(rs.getString("harga"));
            }
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(rootPane, "Error: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(rootPane, "Tidak ada baris yang dipilih.");
    }
} else {
    JOptionPane.showMessageDialog(rootPane, "Pilihan tidak valid. Nilai tb: " + tb);
}
        // TODO add your handling code here:
    }//GEN-LAST:event_TABELTAMPILMouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        Dashboard pindah = new Dashboard();
        pindah.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        datauser pindah = new datauser();
        pindah.setVisible(true);
        this.dispose();      // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        datapenyewa pindah = new datapenyewa();
        pindah.setVisible(true);
        this.dispose();          // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        bayarbulanan pindah = new bayarbulanan();
        pindah.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
         sewakamar pindah = new sewakamar();
        pindah.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel38MouseClicked
        // Membuat instance dari FrameB
        Dashboard pindah = new Dashboard();
        // Menutup jendela
        dispose();
        // Menampilkan FrameB
        pindah.setVisible(true);

        // Menutup FrameA (frame saat ini)
        this.dispose();           // TODO add your handling code here:
    }//GEN-LAST:event_jLabel38MouseClicked

    private void jLabel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MouseClicked
        datakamar pindah = new datakamar();
        pindah.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel44MouseClicked

    private void usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameMouseClicked

    private void levelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_levelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_levelMouseClicked

    private void penggunaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_penggunaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_penggunaMouseClicked

    private void roleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roleMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_roleMouseClicked

    private void TIDPENYEWACaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_TIDPENYEWACaretUpdate
        tb = "1";
        tampildatapenyewa();
        // TODO add your handling code here:
    }//GEN-LAST:event_TIDPENYEWACaretUpdate

    private void TIDKAMARCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_TIDKAMARCaretUpdate
        tb = "2";
        tampildatakamar();        // TODO add your handling code here:
    }//GEN-LAST:event_TIDKAMARCaretUpdate

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        buktibayar pindah = new buktibayar();
        pindah.setVisible(true);
        this.dispose();             // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        pembukuan pindah = new pembukuan();
        pindah.setVisible(true);
        this.dispose();             // TODO add your handling code here:
    }//GEN-LAST:event_jLabel18MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        // Membuat instance dari FrameB
        login pindah = new login();

        // Menampilkan pesan konfirmasi
        JOptionPane.showMessageDialog(null, "Anda yakin untuk keluar.");

        // Menutup jendela
        dispose();

        // Menampilkan FrameB
        pindah.setVisible(true);

        // Menutup FrameA (frame saat ini)
        this.dispose();             // TODO add your handling code here:
    }//GEN-LAST:event_jLabel21MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sewakamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sewakamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sewakamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sewakamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sewakamar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TABELTAMPIL;
    private javax.swing.JTextField TFASILITAS;
    private javax.swing.JTextField THARGA;
    private javax.swing.JTextField TIDKAMAR;
    private javax.swing.JTextField TIDPENYEWA;
    private javax.swing.JTextField TNAMA;
    private javax.swing.JTextField TSEWA;
    private javax.swing.JLabel foto;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel level;
    private javax.swing.JLabel pengguna;
    private javax.swing.JLabel role;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables

    private void bersih() {
   
    // Bersihkan semua JTextField
   
    TIDPENYEWA.setText(""); // Membersihkan TextField ID Penyewa
    TIDKAMAR.setText(""); // Membersihkan TextField ID Kamar
    TNAMA.setText(""); 
    TFASILITAS.setText(""); 
    THARGA.setText(""); 
    

   


    }

    private void tampildatapenyewa() {
    DefaultTableModel model = new DefaultTableModel();
//    model.addColumn("ID");
    model.addColumn("ID Penyewa");
    model.addColumn("Nama Penyewa");
    model.addColumn("Nomor Identitas");
    model.addColumn("Tanggal Lahir");
    model.addColumn("Jenis Kelamin");
    model.addColumn("Pekerjaan");
    model.addColumn("Alamat Asal");
    model.addColumn("Nomor Telepon");
    model.addColumn("Email");
    model.addColumn("Foto");

    try {
        String sql = "SELECT * FROM tbpenyewa";
        Statement stat = con.createStatement();
        ResultSet res = stat.executeQuery(sql);

        while (res.next()) {
            model.addRow(new Object[]{
//                res.getInt("id"),
                res.getString("id_penyewa"),
                res.getString("nama_penyewa"),
                res.getString("nomor_identitas"),
                res.getDate("tanggal_lahir"),
                res.getString("jenis_kelamin"),
                res.getString("pekerjaan"),
                res.getString("alamat_asal"),
                res.getString("nomor_telepon"),
                res.getString("email"),
                res.getString("foto")
            });
        }

        // Set model ke tabel
        TABELTAMPIL.setModel(model);
        
//        // Ambil ID buku terakhir
//          sql = "SELECT id_penyewa FROM tbpenyewa ORDER BY id_penyewa DESC LIMIT 1";
//          rs = stat.executeQuery(sql);
//          String idBukuBaru = "KDP001"; // Default jika tabel kosong
//
//          if (rs.next()) {
//              String lastId = rs.getString("id_penyewa"); // ID terakhir, misalnya "KDB005"
//              int lastNumber = Integer.parseInt(lastId.substring(3)); // Ambil angka setelah "KDB"
//              lastNumber++; // Tambahkan 1
//              idBukuBaru = String.format("KDP%03d", lastNumber); // Format ulang menjadi "KDB" + 3 digit angka
//          }
//
//          // Tampilkan ID buku baru ke TIDBUKU
//          TSEWA.setText(idBukuBaru);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, "Gagal menampilkan data: " + e.getMessage());
    }
    }

    
    private void tampildatakamar() {
      // Buat model tabel baru
        DefaultTableModel tabel = new DefaultTableModel();
        tabel.addColumn("Nomor Kamar");
        tabel.addColumn("Ukuran Kamar");
        tabel.addColumn("Fasilitas Kamar");
        tabel.addColumn("Harga Sewa");
        tabel.addColumn("Lantai");
        tabel.addColumn("Isi Kamar");
        tabel.addColumn("Status");

        try {
            // Query untuk mengambil data dari tbkamar, kecuali nomor_kamar yang sudah ada di tbsewa
            String sql = "SELECT * FROM tbkamar WHERE nomor_kamar NOT IN (SELECT nomor_kamar FROM tbsewa)";
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            // Loop untuk menambahkan data ke model tabel
            while (rs.next()) {
                tabel.addRow(new Object[]{
                    rs.getString("nomor_kamar"),
                    rs.getString("ukuran_kamar"),
                    rs.getString("fasilitas_kamar"),
                    rs.getString("harga_sewa"),
                    rs.getString("lantai"),
                    rs.getString("muat_kamar"),
                    rs.getString("status"),
                });
            }

            // Set model tabel ke JTable
            TABELTAMPIL.setModel(tabel);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }
    
    private void tampilDataSewa() {
    try {
        // Query untuk mengambil data dari tabel tbsewa dan tbpenyewa dengan JOIN
        String sql = "SELECT s.id_sewa, p.nama_penyewa, s.tanggal, s.nomor_kamar " +
                     "FROM tbsewa s " +
                     "JOIN tbpenyewa p ON s.id_penyewa = p.id_penyewa";
        
        // Siapkan Statement
        Statement stmt = con.createStatement();
        
        // Eksekusi query
        ResultSet rs = stmt.executeQuery(sql);

        // Buat model untuk JTable
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Sewa");
        model.addColumn("Nama Penyewa"); // Kolom untuk nama penyewa
        model.addColumn("Tanggal Sewa");
        model.addColumn("Nomor Kamar");

        // Loop untuk membaca data dari ResultSet
        while (rs.next()) {
            Object[] row = new Object[4];
            row[0] = rs.getString("id_sewa");
            row[1] = rs.getString("nama_penyewa"); // Ambil nama_penyewa dari hasil JOIN
            row[2] = rs.getDate("tanggal");
            row[3] = rs.getString("nomor_kamar");
            model.addRow(row);
        }

        // Set model ke JTable
        TABELTAMPIL.setModel(model);

        // Tampilkan log jika perlu (opsional)
        System.out.println("Data berhasil dimuat.");

    } catch (Exception e) {
        // Tangani kesalahan SQL
        JOptionPane.showMessageDialog(rootPane, "Gagal memuat data: " + e.getMessage());
    }

}

    private void loadData() {
       PreparedStatement pstmt = null;
     ResultSet rs = null;

     try {
         // Pastikan koneksi sudah diinisialisasi
         if (con == null) {
             KoneksiDB koneksiDB = new KoneksiDB();
             koneksiDB.koneksikoskosan();
             con = koneksiDB.con;
         }

         // Query untuk mengambil data berdasarkan username dari session
         String sql = "SELECT * FROM akun WHERE username = ?";
         pstmt = con.prepareStatement(sql);
         pstmt.setString(1, login.Session.getUsername()); // Gunakan username dari session
         rs = pstmt.executeQuery();

         if (rs.next()) {
             // Set data ke TextField
             username.setText(rs.getString("username"));
             level.setText(rs.getString("level"));

             // Set ikon foto ke JLabel
             String fotoPath = rs.getString("foto"); 
                 if (fotoPath != null && !fotoPath.trim().isEmpty()) {
                     ImageIcon icon = new ImageIcon(fotoPath);
                     java.awt.Image img = icon.getImage().getScaledInstance(50, 50, java.awt.Image.SCALE_SMOOTH); // Dimensi tetap
                     foto.setIcon(new ImageIcon(img));
                 } else {
                     foto.setIcon(null);
                 }

         } else {
             // Menampilkan pesan bahwa pengguna harus login
             JOptionPane.showMessageDialog(this, "Silakan keluar dan login akun Anda!");
             login pindah = new login();
             pindah.setVisible(true);
             this.dispose();  
         }
//         Ambil ID buku terakhir
          sql = "SELECT id_sewa FROM tbsewa ORDER BY id_sewa DESC LIMIT 1";
          rs = stat.executeQuery(sql);
          String idSewaBaru = "KDS001"; // Default jika tabel kosong

          if (rs.next()) {
              String lastId = rs.getString("id_sewa"); // ID terakhir, misalnya "KDB005"
              int lastNumber = Integer.parseInt(lastId.substring(3)); // Ambil angka setelah "KDB"
              lastNumber++; // Tambahkan 1
              idSewaBaru = String.format("KDS%03d", lastNumber); // Format ulang menjadi "KDB" + 3 digit angka
          }

          // Tampilkan ID buku baru ke TIDBUKU
          TSEWA.setText(idSewaBaru);
          tampilDataSewa();
     } catch (Exception e) {
         JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
     } finally {
         try {
             if (rs != null) rs.close();
             if (pstmt != null) pstmt.close();
         } catch (Exception e) {
             e.printStackTrace();
         }
     }
//      
    }

    
}
