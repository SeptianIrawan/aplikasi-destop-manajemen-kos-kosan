/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;
import java.sql.PreparedStatement;
import Koneksi.KoneksiDB;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author oc
 */
public class datakamar extends javax.swing.JFrame {
     public Connection con;
    public Statement stat;
    public ResultSet rs;
    public String sql, tgl="";
    /**
     * Creates new form datakamar
     */
    public datakamar() {
        initComponents();
        initListeners();
//        this.setExtendedState(Dashboard.MAXIMIZED_BOTH);
        setLocationRelativeTo(null);
        KoneksiDB db = new KoneksiDB();
        db.koneksikoskosan();
        con=db.con;
        stat=db.stat;
        rs=db.rs;
        
        TNOMORKAMAR.setEnabled(false);
        THARGA.setEnabled(false);
        
        
         tampildata(); 
         loaddata ();
         tentukanHargaSewa();
         
    }
    
     public void initListeners() {
        tentukanHargaSewa();
    }

      private double hitungHargaSewa(String ukuranKamar, String fasilitasKamar, String isiKamar) {
    
        double harga = 0.00;

        // Harga dasar berdasarkan ukuran kamar
        switch (ukuranKamar) {
            case "3X3":
                harga += 1000000.00;
                break;
            case "3X4":
                harga += 1200000.00;
                break;
            case "4X5":
                harga += 1500000.00;
                break;
            case "6X8":
                harga += 2000000.00;
                break;
           
        }

        // Tambahan harga berdasarkan fasilitas kamar
        switch (fasilitasKamar) {
            case "KAMAR MANDI DALAM + WIFI":
                harga += 500000.00;
                break;
            case "KAMAR MANDI LUAR + WIFI":
                harga += 300000.00;
                break;
            case "KAMAR MANDI DALAM + WIFI + AC":
                harga += 800000.00;
                break;
            case "KAMAR MANDI LUAR + WIFI + AC":
                harga += 600000.00;
                break;
            case "KAMAR MANDI DALAM + WIFI + AC + TV":
                harga += 1000000.00;
                break;
            case "KAMAR MANDI LUAR + WIFI + AC + TV":
                harga += 800000.00;
                break;
            
        }

        // Tambahan harga berdasarkan isi kamar
        switch (isiKamar) {
            case "KASUR + LEMARI":
                harga += 200000.00;
                break;
            case "KASUR + LEMARI + MEJA BELAJAR":
                harga += 300000.00;
                break;
            case "KASUR + LEMARI + MEJA BELAJAR + WC DUDUK + SHOWER":
                harga += 500000.00;
                break;
            
        }

        return harga;
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        level = new javax.swing.JLabel();
        pengguna = new javax.swing.JLabel();
        role = new javax.swing.JLabel();
        foto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TABELKAMAR = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TLANTAI = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        T = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tpencarian = new javax.swing.JTextField();
        CISIKAMAR = new javax.swing.JComboBox<>();
        CSTATUS = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        TNOMORKAMAR = new javax.swing.JTextField();
        CUKURAN = new javax.swing.JComboBox<>();
        CFASILITAS = new javax.swing.JComboBox<>();
        THARGA = new javax.swing.JTextField();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(930, 678));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel36.setBackground(new java.awt.Color(255, 255, 255));
        jLabel36.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("RGT ");
        jPanel2.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DATA MASTER");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DATA USER");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, 20));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("DATA PENYEWA");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, 20));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("TRANSAKSI");
        jPanel2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("BAYAR BULANAN");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, 20));

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("SEWA KAMAR");
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, 20));

        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/home2.png"))); // NOI18N
        jLabel38.setText("DASHBOARD");
        jLabel38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel38MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 120, 40));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/home.png"))); // NOI18N
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 70, 60));

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/transaksi.png"))); // NOI18N
        jPanel2.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 70, 40));

        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("DATA KAMAR");
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel44MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, 20));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("LAPORAN");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("BUKTI BAYAR");
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, 20));

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("PEMBUKUAN");
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, 20));

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/laporan.png"))); // NOI18N
        jPanel2.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 70, 40));

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/keluar.png"))); // NOI18N
        jLabel21.setText("KELUAR");
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 110, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 680));

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("RESIDENCE GARDEN TOWER");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, -1, -1));

        username.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        username.setForeground(new java.awt.Color(255, 255, 255));
        username.setText("username");
        username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameMouseClicked(evt);
            }
        });
        jPanel1.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 70, -1));

        level.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        level.setForeground(new java.awt.Color(255, 255, 255));
        level.setText("level");
        level.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                levelMouseClicked(evt);
            }
        });
        jPanel1.add(level, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, 100, -1));

        pengguna.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        pengguna.setForeground(new java.awt.Color(255, 255, 255));
        pengguna.setText("USERNAME :");
        pengguna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                penggunaMouseClicked(evt);
            }
        });
        jPanel1.add(pengguna, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        role.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        role.setForeground(new java.awt.Color(255, 255, 255));
        role.setText("LEVEL :");
        role.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roleMouseClicked(evt);
            }
        });
        jPanel1.add(role, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, -1, -1));
        jPanel1.add(foto, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 50, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 810, 70));

        TABELKAMAR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TABELKAMAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABELKAMARMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TABELKAMAR);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 770, 190));

        jLabel6.setText("Nomor Kamar");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 90, 20));

        jLabel7.setText("Ukuran Kamar");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 90, 20));

        jLabel8.setText("Fasilitas Kamar");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 90, 20));

        jLabel9.setText("Harga sewa");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 70, 20));

        TLANTAI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TLANTAIActionPerformed(evt);
            }
        });
        getContentPane().add(TLANTAI, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, 280, 30));

        jLabel10.setText("Lantai");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 130, 190, 40));

        T.setText("Isi Kamar");
        getContentPane().add(T, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 170, 190, 40));

        jLabel12.setText("Status");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 220, 190, 40));

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("CARI");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 370, -1, 40));
        getContentPane().add(tpencarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 370, 120, 40));

        CISIKAMAR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "KASUR + LEMARI", "KASUR + LEMARI + MEJA BELAJAR", "KASUR + LEMARI + MEJA BELAJAR + WC DUDUK + SHOWER" }));
        CISIKAMAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CISIKAMARActionPerformed(evt);
            }
        });
        getContentPane().add(CISIKAMAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 170, 280, 30));

        CSTATUS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "TERSEDIA", "TIDAK TERSEDIA" }));
        getContentPane().add(CSTATUS, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 220, 280, 30));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setBackground(new java.awt.Color(255, 204, 0));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("CENCEL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 80, 40));

        jButton2.setBackground(new java.awt.Color(0, 51, 204));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("SAVE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 80, 40));

        jButton5.setBackground(new java.awt.Color(204, 0, 0));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("DELETE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 80, 40));

        jButton7.setBackground(new java.awt.Color(0, 204, 0));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("UPDATE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 80, 40));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, 770, 250));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel11.setText("DATA KAMAR");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TNOMORKAMAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TNOMORKAMARActionPerformed(evt);
            }
        });
        jPanel3.add(TNOMORKAMAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 20, 240, 30));

        CUKURAN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "3X3", "3X4", "4X5", "6X8" }));
        CUKURAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CUKURANActionPerformed(evt);
            }
        });
        jPanel3.add(CUKURAN, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 60, 240, 30));

        CFASILITAS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "KAMAR MANDI DALAM + WIFI", "KAMAR MANDI LUAR + WIFI", "KAMAR MANDI DALAM + WIFI +AC", "KAMAR MANDI LUAR + WIFI + AC", "KAMAR MANDI DALAM + WIFI + AC + TV", "KAMAR MANDI LUAR + WIFI + AC + TV" }));
        CFASILITAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CFASILITASActionPerformed(evt);
            }
        });
        jPanel3.add(CFASILITAS, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 110, 240, 30));

        THARGA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                THARGAActionPerformed(evt);
            }
        });
        jPanel3.add(THARGA, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 160, 240, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 760, 210));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TNOMORKAMARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TNOMORKAMARActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNOMORKAMARActionPerformed

    private void THARGAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_THARGAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_THARGAActionPerformed

    private void TLANTAIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TLANTAIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TLANTAIActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           // Parse harga sewa dari format lokal Indonesia
            try {
                String hargaText = THARGA.getText().trim();

                // Buat NumberFormat untuk format Indonesia
                NumberFormat nf = NumberFormat.getInstance(new Locale("id", "ID"));
                Number number = nf.parse(hargaText);

                double hargaSewa = number.doubleValue(); // Konversi ke double

                // Lanjutkan dengan logika penyimpanan
                sql = "INSERT INTO tbkamar (nomor_kamar, ukuran_kamar, fasilitas_kamar, harga_sewa, lantai, muat_kamar, status) VALUES (?, ?, ?, ?, ?, ?, ?)";

                PreparedStatement ps = con.prepareStatement(sql);

                ps.setString(1, TNOMORKAMAR.getText().trim());
                ps.setString(2, CUKURAN.getSelectedItem().toString().trim());
                ps.setString(3, CFASILITAS.getSelectedItem().toString().trim());
                ps.setDouble(4, hargaSewa); // Simpan harga sebagai angka
                ps.setString(5, TLANTAI.getText().trim());
                ps.setString(6, CISIKAMAR.getSelectedItem().toString().trim());
                ps.setString(7, CSTATUS.getSelectedItem().toString().trim());

                ps.executeUpdate();

                JOptionPane.showMessageDialog(rootPane, "Data telah disimpan");
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(rootPane, "Harga sewa harus berupa angka yang valid. Contoh: 1.300.000,00.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Data gagal disimpan: " + e.getMessage());
            }

        // Refresh data tabel dan bersihkan input
        tampildata();
        bersih();

              // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
            bersih();
            tampildata();
                 // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
     // Mendapatkan baris yang dipilih
int row = TABELKAMAR.getSelectedRow();

// Pastikan baris yang dipilih valid
if (row != -1) {
    // Mengambil data dari baris yang dipilih
    String NOKAMAR = TABELKAMAR.getValueAt(row, 0).toString(); // Nomor Kamar dari kolom pertama
    String STATUS = TABELKAMAR.getValueAt(row, 6).toString(); // Status dari kolom ke-7

    // Validasi: hanya kamar dengan status "tersedia" yang dapat dihapus
    if (!STATUS.equalsIgnoreCase("tersedia")) {
        JOptionPane.showMessageDialog(this, 
                "Kamar dengan nomor " + NOKAMAR + " tidak dapat dihapus karena sudah disewa atau statusnya tidak tersedia.", 
                "Peringatan", 
                JOptionPane.WARNING_MESSAGE);
        return; // Hentikan proses jika status bukan "tersedia"
    }

    // Menanyakan konfirmasi dari pengguna
    int confirm = JOptionPane.showConfirmDialog(this, 
            "Apakah Anda yakin ingin menghapus data kamar dengan nomor: " + NOKAMAR + "?", 
            "Konfirmasi Hapus", 
            JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        // Kode untuk menghapus data di database
        try {
            String sql = "DELETE FROM tbkamar WHERE nomor_kamar = ?"; // Query DELETE menggunakan parameter
            try (PreparedStatement ps = con.prepareStatement(sql)) {
                ps.setString(1, NOKAMAR);
                ps.executeUpdate();
            }

            // Tampilkan pesan sukses
            JOptionPane.showMessageDialog(rootPane, "Data kamar dengan nomor " + NOKAMAR + " telah dihapus.");

        } catch (Exception e) {
            // Tampilkan pesan kesalahan jika query gagal
            JOptionPane.showMessageDialog(rootPane, "Data gagal dihapus: " + e.getMessage());
        }

        // Panggil metode untuk menampilkan data setelah penghapusan
        tampildata();
        bersih();
    }
} else {
    // Tampilkan pesan kesalahan jika tidak ada baris yang dipilih
    JOptionPane.showMessageDialog(this, "Silakan pilih kamar yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
}

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
            
try {
    String hargaText = THARGA.getText().trim();

    // Buat NumberFormat untuk format Indonesia
    NumberFormat nf = NumberFormat.getInstance(new Locale("id", "ID"));
    Number number = nf.parse(hargaText);

    double hargaSewa = number.doubleValue();

    // Format ulang nilai desimal sesuai kebutuhan database
    DecimalFormat df = new DecimalFormat("#.##");
    String formattedHarga = df.format(hargaSewa);

    sql = "UPDATE tbkamar SET ukuran_kamar = ?, fasilitas_kamar = ?, harga_sewa = ?, lantai = ?, muat_kamar = ?, status = ? WHERE nomor_kamar = ?";

    PreparedStatement ps = con.prepareStatement(sql);

    ps.setString(1, CUKURAN.getSelectedItem().toString().trim());
    ps.setString(2, CFASILITAS.getSelectedItem().toString().trim());
    ps.setDouble(3, Double.parseDouble(formattedHarga)); // Pastikan format angka benar
    ps.setString(4, TLANTAI.getText().trim());
    ps.setString(5, CISIKAMAR.getSelectedItem().toString().trim());
    ps.setString(6, CSTATUS.getSelectedItem().toString().trim());
    ps.setString(7, TNOMORKAMAR.getText().trim());

    int rowsUpdated = ps.executeUpdate();

    if (rowsUpdated > 0) {
        JOptionPane.showMessageDialog(rootPane, "Data telah diperbarui");
    } else {
        JOptionPane.showMessageDialog(rootPane, "Data tidak ditemukan atau gagal diperbarui.");
    }
} catch (ParseException e) {
    JOptionPane.showMessageDialog(rootPane, "Harga sewa harus berupa angka yang valid. Contoh: 1.300.000,00.");
} catch (Exception e) {
    JOptionPane.showMessageDialog(rootPane, "Data gagal diperbarui: " + e.getMessage());
    e.printStackTrace();
}

// Refresh data tabel dan bersihkan input
tampildata();
bersih();

  // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void TABELKAMARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABELKAMARMouseClicked
        // Mendapatkan baris yang dipilih
int row = TABELKAMAR.getSelectedRow();

// Pastikan baris yang dipilih valid
if (row != -1) {
    // Mengambil data dari baris yang dipilih
    String nokamar = TABELKAMAR.getValueAt(row, 0).toString();
    String ukuran = TABELKAMAR.getValueAt(row, 1).toString();
    String fasilitas = TABELKAMAR.getValueAt(row, 2).toString();
    String harga = TABELKAMAR.getValueAt(row, 3).toString();
    String lantai = TABELKAMAR.getValueAt(row, 4).toString();
    String isikamar = TABELKAMAR.getValueAt(row, 5).toString();
    String status = TABELKAMAR.getValueAt(row, 6).toString();

    // Validasi: Pastikan statusnya "tersedia"
    if (!status.equalsIgnoreCase("tersedia")) {
        // Ekstrak nama pengguna jika status menunjukkan pemilik
        String namaPenyewa = "";
        if (status.toLowerCase().startsWith("milik")) {
            namaPenyewa = status.substring(6); // Mengambil teks setelah "Milik "
        }
        JOptionPane.showMessageDialog(this, 
            "Kamar ini sudah disewa oleh " + namaPenyewa, 
            "Peringatan", 
            JOptionPane.WARNING_MESSAGE);
        return; // Berhenti jika status bukan "tersedia"
    }

    // Mengisi form dengan data yang diambil
    TNOMORKAMAR.setText(nokamar);
    CUKURAN.setSelectedItem(ukuran); 
    CFASILITAS.setSelectedItem(fasilitas); 
    THARGA.setText(harga);
    TLANTAI.setText(lantai);
    CISIKAMAR.setSelectedItem(isikamar); // Mengatur item yang dipilih di JComboBox
    CSTATUS.setSelectedItem(status);
}
        // TODO add your handling code here:
    }//GEN-LAST:event_TABELKAMARMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nomor_kamar = tpencarian.getText().trim(); // Mengambil input dari JTextField

        if (nomor_kamar.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan ID Buku untuk mencari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String sql = "SELECT * FROM tbkamar WHERE nomor_kamar = '" + nomor_kamar + "'";
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            DefaultTableModel tabel = new DefaultTableModel();
                tabel.addColumn("Nomor Kamar");
                tabel.addColumn("Ukuran Kamar");
                tabel.addColumn("Fasilitas Kamar");  
                tabel.addColumn("Harga Sewa");
                tabel.addColumn("Lantai");
                tabel.addColumn("Isi Kamar");
                tabel.addColumn("Status");

            if (rs.next()) {
                // Menambahkan data hasil pencarian ke tabel
                tabel.addRow(new Object[]{
                    rs.getString("nomor_kamar"),
                    rs.getString("ukuran_kamar"), 
                    rs.getString("fasilitas_kamar"),
                    rs.getString("harga_sewa"),
                    rs.getString("lantai"), 
                    rs.getString("muat_kamar"),
                    rs.getString("status"),
                });
                 TABELKAMAR.setModel(tabel); // Menampilkan hasil pencarian di JTable
                 JOptionPane.showMessageDialog(rootPane, "ini data Kamar dengan nomor " +  TNOMORKAMAR.getText());
            } else {
                JOptionPane.showMessageDialog(this, "Kamar dengan ID " + nomor_kamar + " tidak ditemukan.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                tampildata(); // Menampilkan semua data jika tidak ada hasil
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        Dashboard pindah = new Dashboard();
        pindah.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        datauser pindah = new datauser();
        pindah.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        datapenyewa pindah = new datapenyewa();
        pindah.setVisible(true);
        this.dispose();          // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        bayarbulanan pindah = new bayarbulanan();
        pindah.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
         sewakamar pindah = new sewakamar();
        pindah.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel38MouseClicked
        // Membuat instance dari FrameB
        Dashboard pindah = new Dashboard();
        // Menutup jendela
        dispose();
        // Menampilkan FrameB
        pindah.setVisible(true);

        // Menutup FrameA (frame saat ini)
        this.dispose();           // TODO add your handling code here:
    }//GEN-LAST:event_jLabel38MouseClicked

    private void jLabel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MouseClicked
        datakamar pindah = new datakamar();
        pindah.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel44MouseClicked

    private void CUKURANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CUKURANActionPerformed
        tentukanHargaSewa();        // TODO add your handling code here:
    }//GEN-LAST:event_CUKURANActionPerformed

    private void CFASILITASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CFASILITASActionPerformed
        tentukanHargaSewa();        // TODO add your handling code here:
    }//GEN-LAST:event_CFASILITASActionPerformed

    private void CISIKAMARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CISIKAMARActionPerformed
            tentukanHargaSewa();  // TODO add your handling code here:
    }//GEN-LAST:event_CISIKAMARActionPerformed

    private void usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameMouseClicked

    private void levelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_levelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_levelMouseClicked

    private void penggunaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_penggunaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_penggunaMouseClicked

    private void roleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roleMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_roleMouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        buktibayar pindah = new buktibayar();
        pindah.setVisible(true);
        this.dispose();             // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        pembukuan pindah = new pembukuan();
        pindah.setVisible(true);
        this.dispose();             // TODO add your handling code here:
    }//GEN-LAST:event_jLabel18MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        // Membuat instance dari FrameB
        login pindah = new login();

        // Menampilkan pesan konfirmasi
        JOptionPane.showMessageDialog(null, "Anda yakin untuk keluar.");

        // Menutup jendela
        dispose();

        // Menampilkan FrameB
        pindah.setVisible(true);

        // Menutup FrameA (frame saat ini)
        this.dispose();             // TODO add your handling code here:
    }//GEN-LAST:event_jLabel21MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(datakamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(datakamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(datakamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(datakamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new datakamar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CFASILITAS;
    private javax.swing.JComboBox<String> CISIKAMAR;
    private javax.swing.JComboBox<String> CSTATUS;
    private javax.swing.JComboBox<String> CUKURAN;
    private javax.swing.JLabel T;
    private javax.swing.JTable TABELKAMAR;
    private javax.swing.JTextField THARGA;
    private javax.swing.JTextField TLANTAI;
    private javax.swing.JTextField TNOMORKAMAR;
    private javax.swing.JLabel foto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel level;
    private javax.swing.JLabel pengguna;
    private javax.swing.JLabel role;
    private javax.swing.JTextField tpencarian;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables

    

    private void tampildata() {
          // Buat model tabel baru
      DefaultTableModel tabel = new DefaultTableModel();
      tabel.addColumn("Nomor Kamar");
      tabel.addColumn("Ukuran Kamar");
      tabel.addColumn("Fasilitas Kamar");  
      tabel.addColumn("Harga Sewa");
      tabel.addColumn("Lantai");
      tabel.addColumn("Isi Kamar");
      tabel.addColumn("Status");
   

      try {
          // Query untuk mengambil data dari tabel tbbuku
          String sql = "SELECT * FROM tbkamar";
          Statement stat = con.createStatement();
          ResultSet rs = stat.executeQuery(sql);

        

          // Loop untuk menambahkan data ke model tabel
          while (rs.next()) {
            
              tabel.addRow(new Object[]{
                  rs.getString("nomor_kamar"),
                  rs.getString("ukuran_kamar"), 
                  rs.getString("fasilitas_kamar"),
                  rs.getString("harga_sewa"),
                  rs.getString("lantai"), 
                  rs.getString("muat_kamar"),
                  rs.getString("status"),
                 
              });
          }

          // Set model tabel ke JTable
          TABELKAMAR.setModel(tabel);

          // Ambil ID buku terakhir
          sql = "SELECT nomor_kamar FROM tbkamar ORDER BY nomor_kamar DESC LIMIT 1";
          rs = stat.executeQuery(sql);
          String idBukuBaru = "KDK001"; // Default jika tabel kosong

          if (rs.next()) {
              String lastId = rs.getString("nomor_kamar"); // ID terakhir, misalnya "KDB005"
              int lastNumber = Integer.parseInt(lastId.substring(3)); // Ambil angka setelah "KDB"
              lastNumber++; // Tambahkan 1
              idBukuBaru = String.format("KDK%03d", lastNumber); // Format ulang menjadi "KDB" + 3 digit angka
          }

          // Tampilkan ID buku baru ke TIDBUKU
          TNOMORKAMAR.setText(idBukuBaru);

      } catch (Exception e) {
          JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
     }
    }

    private void bersih() {
        // Mengembalikan semua field ke nilai semula (kosongkan atau reset)
            CUKURAN.setSelectedIndex(0); // Misalnya mengosongkan field ukuran kamar
            CFASILITAS.setSelectedIndex(0); // Mengatur pilihan fasilitas kamar ke index pertama
            THARGA.setText(""); // Mengosongkan field harga sewa
            TLANTAI.setText(""); // Mengosongkan field lantai
            CISIKAMAR.setSelectedIndex(0); // Mengatur pilihan kapasitas kamar ke index pertama
            CSTATUS.setSelectedIndex(0); // Mengatur status kamar ke index pertama
    }
    
// Contoh penggunaan di event handler (misalnya tombol atau combo box)
private void tentukanHargaSewa() {
    try {
    // Ambil nilai dari komponen input (ComboBox atau TextField)
    String ukuranKamar = CUKURAN.getSelectedItem().toString(); // ComboBox ukuran kamar
    String fasilitasKamar = CFASILITAS.getSelectedItem().toString(); // ComboBox fasilitas kamar
    String isiKamar = CISIKAMAR.getSelectedItem().toString(); // ComboBox isi kamar


    // Hitung harga otomatis
    double hargaSewa = hitungHargaSewa(ukuranKamar, fasilitasKamar, isiKamar);

    // Tampilkan hasil ke TextField harga sewa
    THARGA.setText(String.format("%.2f", hargaSewa));
} catch (IllegalArgumentException ex) {
    JOptionPane.showMessageDialog(null, "Input tidak valid: " + ex.getMessage());
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
}

}

    private void loaddata() {
     PreparedStatement pstmt = null;
     ResultSet rs = null;

     try {
         // Pastikan koneksi sudah diinisialisasi
         if (con == null) {
             KoneksiDB koneksiDB = new KoneksiDB();
             koneksiDB.koneksikoskosan();
             con = koneksiDB.con;
         }

         // Query untuk mengambil data berdasarkan username dari session
         String sql = "SELECT * FROM akun WHERE username = ?";
         pstmt = con.prepareStatement(sql);
         pstmt.setString(1, login.Session.getUsername()); // Gunakan username dari session
         rs = pstmt.executeQuery();

         if (rs.next()) {
             // Set data ke TextField
             username.setText(rs.getString("username"));
             level.setText(rs.getString("level"));

             // Set ikon foto ke JLabel
             String fotoPath = rs.getString("foto"); 
                 if (fotoPath != null && !fotoPath.trim().isEmpty()) {
                     ImageIcon icon = new ImageIcon(fotoPath);
                     java.awt.Image img = icon.getImage().getScaledInstance(50, 50, java.awt.Image.SCALE_SMOOTH); // Dimensi tetap
                     foto.setIcon(new ImageIcon(img));
                 } else {
                     foto.setIcon(null);
                 }

         } else {
             // Menampilkan pesan bahwa pengguna harus login
             JOptionPane.showMessageDialog(this, "Silakan keluar dan login akun Anda!");
             login pindah = new login();
             pindah.setVisible(true);
             this.dispose();  
         }
     } catch (Exception e) {
         JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
     } finally {
         try {
             if (rs != null) rs.close();
             if (pstmt != null) pstmt.close();
         } catch (Exception e) {
             e.printStackTrace();
         }
     }
    }

   

}
